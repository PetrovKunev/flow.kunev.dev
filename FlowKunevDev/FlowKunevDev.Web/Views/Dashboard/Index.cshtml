@model FlowKunevDev.Web.ViewModels.DashboardViewModel

@{
    ViewData["Title"] = "Табло";
    Layout = "_Layout";

    // Създаваме българските имена на месеците
    var bulgarianMonths = new string[]
    {
        "", "Януари", "Февруари", "Март", "Април", "Май", "Юни",
        "Юли", "Август", "Септември", "Октомври", "Ноември", "Декември"
    };

    var currentMonth = bulgarianMonths[DateTime.Now.Month];
    var currentYear = DateTime.Now.Year;
    var endOfMonth = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.DaysInMonth(DateTime.Now.Year, DateTime.Now.Month));
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>
        <i class="fas fa-tachometer-alt text-primary me-2"></i>
        Финансово табло
    </h2>
    <div class="btn-group">
        <div class="dropdown">
            <button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                <i class="fas fa-plus"></i> Нова транзакция
            </button>
            <ul class="dropdown-menu">
                <li>
                    <a class="dropdown-item" asp-controller="Transactions" asp-action="Create" asp-route-type="Income">
                        <i class="fas fa-arrow-up text-success"></i> Приход
                    </a>
                </li>
                <li>
                    <a class="dropdown-item" asp-controller="Transactions" asp-action="Create" asp-route-type="Expense">
                        <i class="fas fa-arrow-down text-danger"></i> Разход
                    </a>
                </li>
                <li><hr class="dropdown-divider"></li>
                <li>
                    <a class="dropdown-item" asp-controller="PlannedTransactions" asp-action="Create" asp-route-type="Income">
                        <i class="fas fa-calendar-plus text-success"></i> Планиран приход
                    </a>
                </li>
                <li>
                    <a class="dropdown-item" asp-controller="PlannedTransactions" asp-action="Create" asp-route-type="Expense">
                        <i class="fas fa-calendar-minus text-danger"></i> Планиран разход
                    </a>
                </li>
            </ul>
        </div>
        <a asp-controller="Accounts" asp-action="Create" class="btn btn-outline-secondary">
            <i class="fas fa-wallet"></i> Нова сметка
        </a>
    </div>
</div>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Основни метрики с планирани транзакции -->
<div class="row mb-4">
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="card border-primary h-100">
            <div class="card-body text-center">
                <i class="fas fa-coins fa-2x text-primary mb-2"></i>
                <h4 class="text-primary mb-1">@Model.TotalBalance.ToString("F2") лв.</h4>
                <p class="text-muted mb-0">Текущ баланс</p>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 mb-3">
        <div class="card border-info h-100">
            <div class="card-body text-center">
                <i class="fas fa-balance-scale fa-2x text-info mb-2"></i>
                <h4 class="text-@(Model.BalanceAfterPlanned >= 0 ? "success" : "warning") mb-1">
                    @Model.BalanceAfterPlanned.ToString("F2") лв.
                </h4>
                <p class="text-muted mb-0">Баланс след планирани</p>
                @if (Model.TotalPlannedExpenses > 0 || Model.PlannedIncome > 0)
                {
                    <small class="text-info">
                        <i class="fas fa-info-circle"></i>
                        +@Model.PlannedIncome.ToString("F0") / -@Model.TotalPlannedExpenses.ToString("F0") лв.
                    </small>
                }
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 mb-3">
        <div class="card border-warning h-100">
            <div class="card-body text-center">
                <i class="fas fa-calculator fa-2x text-warning mb-2"></i>
                <h4 class="text-warning mb-1" id="daily-available-amount">@Model.DailyAvailableAmount.ToString("F2") лв.</h4>
                <p class="text-muted mb-0">
                    <span id="daily-period-text">Дневно разполагаеми</span>
                    <br>
                    <small id="remaining-days-text">(@Model.RemainingDays дни)</small>
                </p>
                <!-- Нова информация за избраните сметки и дати -->
                <div id="calculation-info" class="mt-2" style="display: none;">
                    <small class="text-info d-block" id="accounts-info">
                        <i class="fas fa-wallet me-1"></i>
                        <span id="selected-accounts-count">Всички сметки</span>
                    </small>
                    <small class="text-muted d-block" id="period-info">
                        <i class="fas fa-calendar me-1"></i>
                        <span id="period-dates">Стандартен период</span>
                    </small>
                </div>
                <button type="button" class="btn btn-outline-warning btn-sm mt-2" data-bs-toggle="modal" data-bs-target="#dailyBudgetModal">
                    <i class="fas fa-info-circle"></i> Детайли
                </button>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 mb-3">
        <div class="card border-secondary h-100">
            <div class="card-body text-center">
                <i class="fas fa-chart-line fa-2x text-secondary mb-2"></i>
                <h4 class="text-secondary mb-1">@Model.AverageDailyExpenses.ToString("F2") лв.</h4>
                <p class="text-muted mb-0">Среден дневен разход</p>
                @if (Model.DailyAvailableAmount > Model.AverageDailyExpenses)
                {
                    <small class="text-success">
                        <i class="fas fa-thumbs-up"></i>
                        +@Model.DifferenceFromAverage.ToString("F0") лв. от обичайното
                    </small>
                }
                else if (Model.DailyAvailableAmount < Model.AverageDailyExpenses)
                {
                    <small class="text-warning">
                        <i class="fas fa-exclamation-triangle"></i>
                        -@Model.DifferenceFromAverage.ToString("F0") лв. от обичайното
                    </small>
                }
                else
                {
                    <small class="text-info">
                        <i class="fas fa-equals"></i> Равно на обичайното
                    </small>
                }
            </div>
        </div>
    </div>
</div>

<!-- Месечен баланс с планирани -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card border-info">
            <div class="card-header bg-info text-white">
                <h6 class="mb-0">
                    <i class="fas fa-calendar-alt me-2"></i>
                    Месечен баланс за @currentMonth @currentYear
                </h6>
            </div>
            <div class="card-body">
                <div class="row text-center">
                    <div class="col-md-2">
                        <h5 class="text-success">+@Model.MonthlyIncome.ToString("F2") лв.</h5>
                        <small class="text-muted">Приходи</small>
                    </div>
                    <div class="col-md-2">
                        <h5 class="text-danger">-@Model.MonthlyExpenses.ToString("F2") лв.</h5>
                        <small class="text-muted">Разходи</small>
                    </div>
                    <div class="col-md-2">
                        <h5 class="text-@(Model.MonthlyBalance >= 0 ? "success" : "danger")">
                            @(Model.MonthlyBalance >= 0 ? "+" : "")@Model.MonthlyBalance.ToString("F2") лв.
                        </h5>
                        <small class="text-muted">Нетен баланс</small>
                    </div>
                    <div class="col-md-2">
                        <h5 class="text-success">+@Model.PlannedIncome.ToString("F2") лв.</h5>
                        <small class="text-muted">Планирани приходи</small>
                    </div>
                    <div class="col-md-2">
                        <h5 class="text-danger">-@Model.TotalPlannedExpenses.ToString("F2") лв.</h5>
                        <small class="text-muted">Планирани разходи</small>
                    </div>
                    <div class="col-md-2">
                        <h5 class="text-@(Model.BalanceAfterPlanned >= 0 ? "success" : "warning")">
                            @(Model.BalanceAfterPlanned >= 0 ? "+" : "")@Model.BalanceAfterPlanned.ToString("F2") лв.
                        </h5>
                        <small class="text-muted">Прогнозен баланс</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Планирани транзакции widget -->
@if (Model.HasOverdueTransactions || Model.HasUpcomingTransactions)
{
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h6 class="mb-0">
                        <i class="fas fa-calendar-plus text-primary"></i>
                        Планирани транзакции
                        @if (Model.HasOverdueTransactions)
                        {
                            <span class="badge bg-warning ms-2">@Model.OverdueCount просрочени</span>
                        }
                    </h6>
                    <div class="btn-group btn-group-sm">
                        <a asp-controller="PlannedTransactions" asp-action="Upcoming" class="btn btn-outline-info btn-sm">
                            <i class="fas fa-calendar-day"></i> Предстоящи
                        </a>
                        @if (Model.HasOverdueTransactions)
                        {
                            <a asp-controller="PlannedTransactions" asp-action="Overdue" class="btn btn-outline-warning btn-sm">
                                <i class="fas fa-exclamation-triangle"></i> Просрочени (@Model.OverdueCount)
                            </a>
                        }
                        <a asp-controller="PlannedTransactions" asp-action="Create" class="btn btn-primary btn-sm">
                            <i class="fas fa-plus"></i> Нова
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <!-- Просрочени транзакции -->
                        @if (Model.HasOverdueTransactions)
                        {
                            <div class="col-md-6">
                                <div class="border-start border-warning border-3 ps-3 mb-3">
                                    <h6 class="text-warning mb-2">
                                        <i class="fas fa-exclamation-triangle"></i>
                                        Просрочени (@Model.OverdueCount)
                                    </h6>
                                    @foreach (var overdue in Model.OverduePlannedTransactions.Take(3))
                                    {
                                        <div class="d-flex justify-content-between align-items-center py-2 border-bottom">
                                            <div class="flex-grow-1">
                                                <div class="fw-bold small">@overdue.Description</div>
                                                <div class="text-muted small">
                                                    @overdue.PlannedDate.ToString("dd.MM")
                                                    <span class="badge bg-danger ms-1">-@Math.Abs(overdue.DaysUntilDue)д</span>
                                                </div>
                                            </div>
                                            <div class="text-end">
                                                <div class="fw-bold text-@(overdue.Type == FlowKunevDev.Common.TransactionType.Income ? "success" : "danger") small">
                                                    @(overdue.Type == FlowKunevDev.Common.TransactionType.Income ? "+" : "-")@overdue.PlannedAmount.ToString("F0") лв.
                                                </div>
                                                <button class="btn btn-outline-success btn-sm"
                                                        onclick="quickExecute(@overdue.Id, '@overdue.Description', @overdue.PlannedAmount)"
                                                        title="Бързо изпълнение">
                                                    <i class="fas fa-play"></i>
                                                </button>
                                            </div>
                                        </div>
                                    }
                                    @if (Model.OverdueCount > 3)
                                    {
                                        <div class="text-center mt-2">
                                            <a asp-controller="PlannedTransactions" asp-action="Overdue" class="btn btn-outline-warning btn-sm">
                                                Виж всички (@Model.OverdueCount)
                                            </a>
                                        </div>
                                    }
                                </div>
                            </div>
                        }

                        <!-- Предстоящи транзакции -->
                        @if (Model.HasUpcomingTransactions)
                        {
                            <div class="col-md-6">
                                <div class="border-start border-info border-3 ps-3 mb-3">
                                    <h6 class="text-info mb-2">
                                        <i class="fas fa-calendar-day"></i>
                                        Предстоящи (@Model.UpcomingCount)
                                    </h6>
                                    @foreach (var upcoming in Model.UpcomingPlannedTransactions.Take(3))
                                    {
                                        <div class="d-flex justify-content-between align-items-center py-2 border-bottom">
                                            <div class="flex-grow-1">
                                                <div class="fw-bold small">@upcoming.Description</div>
                                                <div class="text-muted small">
                                                    @upcoming.PlannedDate.ToString("dd.MM")
                                                    @if (upcoming.IsDueToday)
                                                    {
                                                        <span class="badge bg-info ms-1">Днес</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-secondary ms-1">@upcoming.DaysUntilDue д</span>
                                                    }
                                                </div>
                                            </div>
                                            <div class="text-end">
                                                <div class="fw-bold text-@(upcoming.Type == FlowKunevDev.Common.TransactionType.Income ? "success" : "danger") small">
                                                    @(upcoming.Type == FlowKunevDev.Common.TransactionType.Income ? "+" : "-")@upcoming.PlannedAmount.ToString("F0") лв.
                                                </div>
                                                @if (upcoming.IsDueToday || upcoming.DaysUntilDue <= 3)
                                                {
                                                    <button class="btn btn-outline-success btn-sm"
                                                            onclick="quickExecute(@upcoming.Id, '@upcoming.Description', @upcoming.PlannedAmount)"
                                                            title="Бързо изпълнение">
                                                        <i class="fas fa-play"></i>
                                                    </button>
                                                }
                                                else
                                                {
                                                    <a asp-controller="PlannedTransactions" asp-action="Details" asp-route-id="@upcoming.Id"
                                                       class="btn btn-outline-primary btn-sm" title="Детайли">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                }
                                            </div>
                                        </div>
                                    }
                                    @if (Model.UpcomingCount > 3)
                                    {
                                        <div class="text-center mt-2">
                                            <a asp-controller="PlannedTransactions" asp-action="Upcoming" class="btn btn-outline-info btn-sm">
                                                Виж всички (@Model.UpcomingCount)
                                            </a>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="row">
    <!-- Сметки -->
    <div class="col-lg-6 mb-4">
        <div class="card h-100">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h6 class="mb-0">
                    <i class="fas fa-wallet me-2"></i>Моите сметки
                </h6>
                <a asp-controller="Accounts" asp-action="Index" class="btn btn-sm btn-outline-primary">
                    Всички
                </a>
            </div>
            <div class="card-body">
                @if (Model.Accounts.Any())
                {
                    @foreach (var account in Model.Accounts.Take(4))
                    {
                        <div class="d-flex justify-content-between align-items-center py-2 border-bottom">
                            <div class="d-flex align-items-center">
                                <div class="me-3">
                                    <span class="badge rounded-pill" style="background-color: @account.Color; width: 12px; height: 12px;"></span>
                                </div>
                                <div>
                                    <small class="fw-bold">@account.Name</small>
                                    <br>
                                    <small class="text-muted">
                                        @switch (account.Type)
                                        {
                                            case "Savings":
                                                <text>Спестявания</text>
                                                break;
                                            case "Salary":
                                                <text>Заплата</text>
                                                break;
                                            case "Current":
                                                <text>Текуща сметка</text>
                                                break;
                                            case "CreditCard":
                                                <text>Кредитна карта</text>
                                                break;
                                            case "Investment":
                                                <text>Инвестиции</text>
                                                break;
                                            case "Cash":
                                                <text>Кеш</text>
                                                break;
                                            case "Other":
                                                <text>Друго</text>
                                                break;
                                            default:
                                                @account.Type
                                                break;
                                        }
                                    </small>
                                </div>
                            </div>
                            <div class="text-end">
                                <span class="fw-bold text-@(account.CurrentBalance >= 0 ? "success" : "danger")">
                                    @account.CurrentBalance.ToString("F2") @account.Currency
                                </span>
                            </div>
                        </div>
                    }

                    @if (Model.Accounts.Count > 4)
                    {
                        <div class="text-center mt-3">
                            <small class="text-muted">и още @(Model.Accounts.Count - 4) сметки...</small>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center text-muted py-4">
                        <i class="fas fa-wallet fa-3x mb-3 opacity-50"></i>
                        <p>Нямате създадени сметки</p>
                        <a asp-controller="Accounts" asp-action="Create" class="btn btn-primary btn-sm">
                            Създайте първата си сметка
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Последни транзакции -->
    <div class="col-lg-6 mb-4">
        <div class="card h-100">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h6 class="mb-0">
                    <i class="fas fa-exchange-alt me-2"></i>Последни транзакции
                </h6>
                <a asp-controller="Transactions" asp-action="Index" class="btn btn-sm btn-outline-primary">
                    Всички
                </a>
            </div>
            <div class="card-body">
                @if (Model.RecentTransactions.Any())
                {
                    @foreach (var transaction in Model.RecentTransactions)
                    {
                        <div class="d-flex justify-content-between align-items-center py-2 border-bottom">
                            <div>
                                <small class="fw-bold">@transaction.Description</small>
                                <br>
                                <small class="text-muted">@transaction.Date.ToString("dd.MM.yyyy")</small>
                            </div>
                            <div class="text-end">
                                <span class="fw-bold text-@(transaction.Type == FlowKunevDev.Common.TransactionType.Income ? "success" : "danger")">
                                    @(transaction.Type == FlowKunevDev.Common.TransactionType.Income ? "+" : "-")@transaction.Amount.ToString("F2") лв.
                                </span>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center text-muted py-4">
                        <i class="fas fa-exchange-alt fa-3x mb-3 opacity-50"></i>
                        <p>Нямате транзакции</p>
                        <a asp-controller="Transactions" asp-action="Create" class="btn btn-primary btn-sm">
                            Добавете първата си транзакция
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Разходи по категории -->
@if (Model.ExpensesByCategory.Any())
{
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="fas fa-chart-pie me-2"></i>Разходи по категории този месец
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row">
                        @foreach (var category in Model.ExpensesByCategory.Take(6))
                        {
                            <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
                                <div class="text-center">
                                    <div class="mb-2">
                                        <span class="badge rounded-pill" style="background-color: @category.Color; font-size: 0.9rem; padding: 8px 12px;">
                                            @category.Percentage.ToString("F1")%
                                        </span>
                                    </div>
                                    <small class="fw-bold">@category.CategoryName</small>
                                    <br>
                                    <small class="text-muted">@category.Amount.ToString("F2") лв.</small>
                                </div>
                            </div>
                        }
                    </div>

                    @if (Model.ExpensesByCategory.Count > 6)
                    {
                        <div class="text-center mt-3">
                            <a asp-controller="Reports" asp-action="Categories" class="btn btn-outline-primary btn-sm">
                                Виж всички категории
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}

<!-- Бързи действия -->
<div class="row mt-4">
    <div class="col-12">
        <div class="card border-secondary">
            <div class="card-header bg-light">
                <h6 class="mb-0 text-secondary">
                    <i class="fas fa-bolt me-2"></i>Бързи действия
                </h6>
            </div>
            <div class="card-body">
                <div class="row text-center">
                    <div class="col-lg-2 col-md-4 col-6 mb-3">
                        <a asp-controller="Transactions" asp-action="Create" asp-route-type="Income" class="btn btn-outline-success w-100">
                            <i class="fas fa-plus fa-2x mb-2"></i>
                            <br>
                            <small>Приход</small>
                        </a>
                    </div>
                    <div class="col-lg-2 col-md-4 col-6 mb-3">
                        <a asp-controller="Transactions" asp-action="Create" asp-route-type="Expense" class="btn btn-outline-danger w-100">
                            <i class="fas fa-minus fa-2x mb-2"></i>
                            <br>
                            <small>Разход</small>
                        </a>
                    </div>
                    <div class="col-lg-2 col-md-4 col-6 mb-3">
                        <a asp-controller="PlannedTransactions" asp-action="Create" class="btn btn-outline-primary w-100">
                            <i class="fas fa-calendar-plus fa-2x mb-2"></i>
                            <br>
                            <small>Планирана</small>
                        </a>
                    </div>
                    <div class="col-lg-2 col-md-4 col-6 mb-3">
                        <a asp-controller="AccountTransfers" asp-action="Create" class="btn btn-outline-info w-100">
                            <i class="fas fa-exchange-alt fa-2x mb-2"></i>
                            <br>
                            <small>Трансфер</small>
                        </a>
                    </div>
                    <div class="col-lg-2 col-md-4 col-6 mb-3">
                        <a asp-controller="Reports" asp-action="Monthly" class="btn btn-outline-warning w-100">
                            <i class="fas fa-chart-bar fa-2x mb-2"></i>
                            <br>
                            <small>Отчети</small>
                        </a>
                    </div>
                    <div class="col-lg-2 col-md-4 col-6 mb-3">
                        <a asp-controller="Accounts" asp-action="Index" class="btn btn-outline-secondary w-100">
                            <i class="fas fa-wallet fa-2x mb-2"></i>
                            <br>
                            <small>Сметки</small>
                        </a>
                    </div>
                    <div class="col-lg-2 col-md-4 col-6 mb-3">
                        <a asp-controller="Reports" asp-action="PeriodComparison" class="btn btn-outline-info w-100">
                            <i class="fas fa-chart-line fa-2x mb-2"></i>
                            <br>
                            <small>Сравнение периоди</small>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal за дневен бюджет -->
<div class="modal fade" id="dailyBudgetModal" tabindex="-1" aria-labelledby="dailyBudgetModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="dailyBudgetModalLabel">
                    <i class="fas fa-calculator me-2"></i>Дневен бюджет - детайли
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Форма за период и избор на сметки -->
                <div class="row mb-4">
                    <div class="col-md-4">
                        <label for="customFromDate" class="form-label">От дата:</label>
                        <input type="date" class="form-control" id="customFromDate" value="@DateTime.Now.ToString("yyyy-MM-dd")">
                    </div>
                    <div class="col-md-4">
                        <label for="customToDate" class="form-label">До дата:</label>
                        <input type="date" class="form-control" id="customToDate" value="@endOfMonth.ToString("yyyy-MM-dd")">
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Режим на изчисление:</label>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="calculationMode" id="allAccountsMode" value="all" checked>
                            <label class="form-check-label" for="allAccountsMode">
                                Всички сметки
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="calculationMode" id="selectedAccountsMode" value="selected">
                            <label class="form-check-label" for="selectedAccountsMode">
                                Избрани сметки
                            </label>
                        </div>
                    </div>
                </div>

                <!-- Избор на сметки -->
                <div id="accountSelectionPanel" class="row mb-4" style="display: none;">
                    <div class="col-12">
                        <label class="form-label">Изберете сметки за включване в изчислението:</label>
                        <div class="card">
                            <div class="card-body">
                                <div class="row" id="accountCheckboxes">
                                    @foreach (var account in Model.Accounts)
                                    {
                                        <div class="col-md-6 col-lg-4 mb-2">
                                            <div class="form-check">
                                                <input class="form-check-input account-checkbox" type="checkbox" 
                                                       value="@account.Id" id="account-@account.Id" checked>
                                                <label class="form-check-label d-flex align-items-center" for="account-@account.Id">
                                                    <span class="badge me-2" style="background-color: @account.Color; color: white;">
                                                        @account.Name
                                                    </span>
                                                    <small class="text-muted">@account.CurrentBalance.ToString("F2") @account.Currency</small>
                                                </label>
                                            </div>
                                        </div>
                                    }
                                </div>
                                <div class="mt-3">
                                    <button type="button" class="btn btn-sm btn-outline-primary" onclick="selectAllAccounts()">
                                        <i class="fas fa-check-square"></i> Избери всички
                                    </button>
                                    <button type="button" class="btn btn-sm btn-outline-secondary" onclick="deselectAllAccounts()">
                                        <i class="fas fa-square"></i> Премахни всички
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Бутони за обновяване -->
                <div class="row mb-3">
                    <div class="col-12">
                        <button type="button" class="btn btn-primary me-2" onclick="updateDailyBudget()">
                            <i class="fas fa-sync"></i> Обнови
                        </button>
                        <button type="button" class="btn btn-outline-secondary me-2" onclick="setToEndOfMonth()">
                            До края на месеца
                        </button>
                        <button type="button" class="btn btn-outline-info" onclick="setNext30Days()">
                            Следващи 30 дни
                        </button>
                    </div>
                </div>

                <!-- Резултати -->
                <div id="budget-details">
                    <!-- Първоначално показваме текущите данни -->
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <div class="card border-info">
                                <div class="card-body text-center">
                                    <h6 class="text-info">Текущ баланс</h6>
                                    <h4 class="text-primary">@Model.TotalBalance.ToString("F2") лв.</h4>
                                    <small class="text-muted">Всички сметки</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <div class="card border-warning">
                                <div class="card-body text-center">
                                    <h6 class="text-warning">Оставащи дни</h6>
                                    <h4 class="text-warning">@Model.RemainingDays дни</h4>
                                    <small class="text-muted">@Model.AnalysisPeriodStart.ToString("dd.MM") - @Model.AnalysisPeriodEnd.ToString("dd.MM")</small>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <div class="card border-danger">
                                <div class="card-body text-center">
                                    <h6 class="text-danger">Планирани разходи</h6>
                                    <h5 class="text-danger">@Model.TotalPlannedExpenses.ToString("F2") лв.</h5>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <div class="card border-success">
                                <div class="card-body text-center">
                                    <h6 class="text-success">Планирани приходи</h6>
                                    <h5 class="text-success">@Model.PlannedIncome.ToString("F2") лв.</h5>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <div class="card border-primary">
                                <div class="card-body text-center">
                                    <h6 class="text-primary">Дневно разполагаеми</h6>
                                    <h4 class="text-primary">@Model.DailyAvailableAmount.ToString("F2") лв.</h4>
                                    <small class="text-muted">За период</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <div class="card border-secondary">
                                <div class="card-body text-center">
                                    <h6 class="text-secondary">Среден дневен разход</h6>
                                    <h5 class="text-secondary">@Model.AverageDailyExpenses.ToString("F2") лв.</h5>
                                    <small class="text-muted">Последни 30 дни</small>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="alert alert-info">
                        <h6><i class="fas fa-lightbulb me-2"></i>Препоръка:</h6>
                        <p class="mb-0">
                            @if (Model.DailyAvailableAmount > Model.AverageDailyExpenses)
                            {
                                <span class="text-success">
                                    <i class="fas fa-check-circle"></i>
                                    <strong>Отлично!</strong> Имате @Model.DifferenceFromAverage.ToString("F2") лв. повече от обичайното дневно разходване.
                                </span>
                            }
                            else if (Model.DailyAvailableAmount < Model.AverageDailyExpenses)
                            {
                                <span class="text-warning">
                                    <i class="fas fa-exclamation-triangle"></i>
                                    <strong>Внимание!</strong> Имате @Model.DifferenceFromAverage.ToString("F2") лв. по-малко от обичайното дневно разходване.
                                </span>
                            }
                            else
                            {
                                <span class="text-info">
                                    <i class="fas fa-info-circle"></i>
                                    Дневните ви разполагаеми средства са равни на средния дневен разход.
                                </span>
                            }
                        </p>
                    </div>

                    <!-- Информация за включени сметки -->
                    <div id="included-accounts-info" class="mt-3" style="display: none;">
                        <div class="card border-info">
                            <div class="card-header">
                                <h6 class="mb-0"><i class="fas fa-info-circle me-2"></i>Включени сметки в изчислението</h6>
                            </div>
                            <div class="card-body" id="included-accounts-list">
                                <!-- Ще се попълни динамично -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal за бързо изпълнение на планирани транзакции -->
<div class="modal fade" id="quickExecuteModal" tabindex="-1">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h6 class="modal-title">
                    <i class="fas fa-play"></i> Бързо изпълнение
                </h6>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <form id="quickExecuteForm" method="post">
                <div class="modal-body">
                    <input type="hidden" id="quickExecuteId" name="id" />
                    <div class="mb-3">
                        <label class="form-label small">Транзакция:</label>
                        <div id="quickExecuteDescription" class="fw-bold"></div>
                    </div>
                    <div class="mb-3">
                        <label for="quickActualAmount" class="form-label small">Сума:</label>
                        <div class="input-group input-group-sm">
                            <input type="number" step="0.01" class="form-control" id="quickActualAmount" name="actualAmount" />
                            <span class="input-group-text">лв.</span>
                        </div>
                        <small class="text-muted">Оставете празно за планираната сума</small>
                    </div>
                    <div class="mb-3">
                        <label for="quickActualDate" class="form-label small">Дата:</label>
                        <input type="date" class="form-control form-control-sm" id="quickActualDate" name="actualDate" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Откажи</button>
                    <button type="submit" class="btn btn-success btn-sm">
                        <i class="fas fa-check"></i> Изпълни
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Добавяме hover ефекти на картите
            $('.card').hover(
                function() {
                    $(this).addClass('shadow-sm');
                },
                function() {
                    $(this).removeClass('shadow-sm');
                }
            );

            // Auto-refresh на планираните транзакции всеки 5 минути
            setInterval(refreshPlannedTransactions, 300000);

            // Event handlers за режим на изчисление
            $('input[name="calculationMode"]').change(function() {
                if ($(this).val() === 'selected') {
                    $('#accountSelectionPanel').show();
                } else {
                    $('#accountSelectionPanel').hide();
                }
            });

            // Автоматично обновяване при промяна на чекбоксовете
            $('.account-checkbox').change(function() {
                if ($('#selectedAccountsMode').is(':checked')) {
                    // Автоматично обновяване само ако сме в режим "избрани сметки"
                    // updateDailyBudget(); // Премахваме автоматичното обновяване за по-добра производителност
                }
            });

            // Функция за ресет на информацията при затваряне на модала
            $('#dailyBudgetModal').on('hidden.bs.modal', function () {
                // Проверяваме дали сме в стандартен режим
                const isAllAccounts = $('input[name="calculationMode"]:checked').val() === 'all';
                const isStandardPeriod = checkIfStandardPeriod();

                if (isAllAccounts && isStandardPeriod) {
                    // Скриваме допълнителната информация
                    $('#calculation-info').hide();
                    $('#selected-accounts-count').text('Всички сметки');
                    $('#period-dates').text('Стандартен период');
                }
            });

            // Handle quick execute form submission
            $('#quickExecuteForm').on('submit', function(e) {
                e.preventDefault();

                const formData = new FormData(this);

                fetch(this.action, {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        bootstrap.Modal.getInstance(document.getElementById('quickExecuteModal')).hide();
                        // Показваме success message
                        const alert = document.createElement('div');
                        alert.className = 'alert alert-success alert-dismissible fade show';
                        alert.innerHTML = `
                            ${data.message}
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        `;
                        document.querySelector('.container-fluid').insertBefore(alert, document.querySelector('.container-fluid').firstChild);

                        // Refresh page за актуални данни
                        setTimeout(() => location.reload(), 2000);
                    } else {
                        alert('Грешка: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Възникна грешка при изпълнението.');
                });
            });
        });

        function quickExecute(id, description, plannedAmount) {
            document.getElementById('quickExecuteId').value = id;
            document.getElementById('quickExecuteDescription').textContent = description;
            document.getElementById('quickActualAmount').placeholder = plannedAmount.toFixed(2) + ' лв.';
            document.getElementById('quickExecuteForm').action = '@Url.Action("QuickExecutePlanned")';
            new bootstrap.Modal(document.getElementById('quickExecuteModal')).show();
        }

        function refreshPlannedTransactions() {
            fetch('@Url.Action("GetPlannedTransactionsOverview")')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        updatePlannedTransactionsWidget(data.data);
                    }
                })
                .catch(error => console.log('Error refreshing planned transactions:', error));
        }

        function updatePlannedTransactionsWidget(data) {
            // Обновяваме badges за просрочени
            const overdueCount = data.overdue.length;
            const upcomingCount = data.upcoming.length;

            // Можем да добавим notification badge в навигацията
            updateNotificationBadges(overdueCount, upcomingCount);
        }

        function updateNotificationBadges(overdueCount, upcomingCount) {
            // Ако има navigation badge за планирани транзакции
            const plannedNavBadge = document.querySelector('#plannedNavDropdown .badge');
            if (plannedNavBadge && (overdueCount > 0 || upcomingCount > 0)) {
                plannedNavBadge.textContent = overdueCount + upcomingCount;
                plannedNavBadge.className = overdueCount > 0 ? 'badge bg-warning' : 'badge bg-info';
            }
        }

        // Функция за избор на всички сметки
        function selectAllAccounts() {
            $('.account-checkbox').prop('checked', true);
            if ($('#selectedAccountsMode').is(':checked')) {
                updateDailyBudget();
            }
        }

        // Функция за премахване на избора от всички сметки
        function deselectAllAccounts() {
            $('.account-checkbox').prop('checked', false);
            if ($('#selectedAccountsMode').is(':checked')) {
                updateDailyBudget();
            }
        }

        // Помощни функции за дати
        function setToEndOfMonth() {
            const now = new Date();
            const endOfMonth = new Date(now.getFullYear(), now.getMonth() + 1, 0);

            $('#customFromDate').val(now.toISOString().split('T')[0]);
            $('#customToDate').val(endOfMonth.toISOString().split('T')[0]);
        }

        function setNext30Days() {
            const now = new Date();
            const next30Days = new Date(now.getTime() + (30 * 24 * 60 * 60 * 1000));

            $('#customFromDate').val(now.toISOString().split('T')[0]);
            $('#customToDate').val(next30Days.toISOString().split('T')[0]);
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString('bg-BG', { day: '2-digit', month: '2-digit' });
        }

        // Помощна функция за проверка на стандартния период
        function checkIfStandardPeriod() {
            const fromDate = $('#customFromDate').val();
            const toDate = $('#customToDate').val();

            const today = new Date();
            const endOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);

            const todayString = today.toISOString().split('T')[0];
            const endOfMonthString = endOfMonth.toISOString().split('T')[0];

            return fromDate === todayString && toDate === endOfMonthString;
        }

        // Главна функция за обновяване на дневния бюджет
        function updateDailyBudget() {
            const fromDate = $('#customFromDate').val();
            const toDate = $('#customToDate').val();
            const calculationMode = $('input[name="calculationMode"]:checked').val();

            // Проверка за валидни дати
            if (!fromDate || !toDate) {
                showAlert('warning', 'Моля въведете валидни дати');
                return;
            }

            let requestData = {
                fromDate: fromDate,
                toDate: toDate,
                includeAllAccounts: calculationMode === 'all',
                selectedAccountIds: []
            };

            // Ако е избран режим "избрани сметки", събираме избраните ID-та
            if (calculationMode === 'selected') {
                const selectedIds = [];
                $('.account-checkbox:checked').each(function() {
                    selectedIds.push(parseInt($(this).val()));
                });
                requestData.selectedAccountIds = selectedIds;

                // Проверяваме дали има избрани сметки
                if (selectedIds.length === 0) {
                    showAlert('warning', 'Моля, изберете поне една сметка за изчислението.');
                    return;
                }
            }

            // Показваме loading индикатор
            $('#budget-details').html(`
                <div class="text-center py-4">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Зареждане...</span>
                    </div>
                    <p class="mt-2 text-muted">Изчисляване на дневния бюджет...</p>
                </div>
            `);

            // Определяме кой endpoint да използваме
            let fetchUrl, fetchOptions;

            if (calculationMode === 'all') {
                // Използваме стария endpoint за всички сметки
                fetchUrl = '@Url.Action("GetDailyBudgetInfo")?' + new URLSearchParams({
                    fromDate: fromDate,
                    toDate: toDate
                });
                fetchOptions = { method: 'GET' };
            } else {
                // Използваме новия endpoint за избрани сметки
                fetchUrl = '/Dashboard/GetDailyBudgetInfoWithAccounts';
                fetchOptions = {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    body: JSON.stringify(requestData)
                };
            }

            // Правим AJAX заявката
            fetch(fetchUrl, fetchOptions)
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    updateBudgetDisplay(result.data);
                    updateMainDashboard(result.data);
                } else {
                    showAlert('danger', 'Грешка: ' + result.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showAlert('danger', 'Възникна грешка при изчислението.');
            });
        }

        // Функция за обновяване на показването на резултатите
        function updateBudgetDisplay(data) {
            const calculationMode = $('input[name="calculationMode"]:checked').val();
            const isSelectedMode = calculationMode === 'selected';
            const accountsInfo = isSelectedMode ? 'Избрани сметки' : 'Всички сметки';

            const html = `
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <div class="card border-info">
                            <div class="card-body text-center">
                                <h6 class="text-info">Текущ баланс</h6>
                                <h4 class="text-primary">${data.totalBalance.toFixed(2)} лв.</h4>
                                <small class="text-muted">${accountsInfo}</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <div class="card border-warning">
                            <div class="card-body text-center">
                                <h6 class="text-warning">Оставащи дни</h6>
                                <h4 class="text-warning">${data.remainingDays} дни</h4>
                                <small class="text-muted">${formatDate(data.startDate)} - ${formatDate(data.endDate)}</small>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <div class="card border-danger">
                            <div class="card-body text-center">
                                <h6 class="text-danger">Планирани разходи</h6>
                                <h5 class="text-danger">${data.plannedExpenses.toFixed(2)} лв.</h5>
                                <small class="text-muted">${accountsInfo}</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <div class="card border-success">
                            <div class="card-body text-center">
                                <h6 class="text-success">Планирани приходи</h6>
                                <h5 class="text-success">${data.plannedIncome.toFixed(2)} лв.</h5>
                                <small class="text-muted">${accountsInfo}</small>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <div class="card border-primary">
                            <div class="card-body text-center">
                                <h6 class="text-primary">Дневно разполагаеми</h6>
                                <h4 class="text-primary">${data.dailyAvailable.toFixed(2)} лв.</h4>
                                <small class="text-muted">За период</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <div class="card border-secondary">
                            <div class="card-body text-center">
                                <h6 class="text-secondary">Среден дневен разход</h6>
                                <h5 class="text-secondary">${data.averageDailyExpenses.toFixed(2)} лв.</h5>
                                <small class="text-muted">Последни 30 дни${isSelectedMode ? ' - ' + accountsInfo.toLowerCase() : ''}</small>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="alert alert-info">
                    <h6><i class="fas fa-lightbulb me-2"></i>Препоръка:</h6>
                    <p class="mb-0">
                        ${data.dailyAvailable > data.averageDailyExpenses ?
                            `<span class="text-success"><i class="fas fa-check-circle"></i> <strong>Отлично!</strong> Имате ${(data.dailyAvailable - data.averageDailyExpenses).toFixed(2)} лв. повече от обичайното дневно разходване.</span>` :
                            data.dailyAvailable < data.averageDailyExpenses ?
                            `<span class="text-warning"><i class="fas fa-exclamation-triangle"></i> <strong>Внимание!</strong> Имате ${(data.averageDailyExpenses - data.dailyAvailable).toFixed(2)} лв. по-малко от обичайното дневно разходване.</span>` :
                            `<span class="text-info"><i class="fas fa-info-circle"></i> Дневните ви разполагаеми средства са равни на средния дневен разход.</span>`
                        }
                    </p>
                </div>
            `;

            $('#budget-details').html(html);

            // Показваме информацията за включените сметки, ако е в режим "избрани"
            if (isSelectedMode && data.includedAccounts && data.includedAccounts.length > 0) {
                showIncludedAccountsInfo(data.includedAccounts, data.selectedAccountIds);
            } else {
                $('#included-accounts-info').hide();
            }
        }

        // Функция за показване на информация за включените сметки
        function showIncludedAccountsInfo(accounts, selectedAccountIds) {
            const includedAccounts = accounts.filter(acc => selectedAccountIds.includes(acc.id));

            if (includedAccounts.length === 0) {
                $('#included-accounts-info').hide();
                return;
            }

            let accountsHtml = '<div class="row">';
            includedAccounts.forEach(account => {
                accountsHtml += `
                    <div class="col-md-6 col-lg-4 mb-2">
                        <div class="d-flex align-items-center">
                            <span class="badge me-2" style="background-color: ${account.color}; color: white;">
                                ${account.name}
                            </span>
                            <small class="text-muted">${account.currentBalance.toFixed(2)} ${account.currency}</small>
                        </div>
                    </div>
                `;
            });
            accountsHtml += '</div>';

            $('#included-accounts-list').html(accountsHtml);
            $('#included-accounts-info').show();
        }

        // Функция за обновяване на основното табло
        function updateMainDashboard(data) {
            const calculationMode = $('input[name="calculationMode"]:checked').val();
            const isSelectedMode = calculationMode === 'selected';

            // Винаги обновяваме основната карта
            $('#daily-available-amount').text(data.dailyAvailable.toFixed(2) + ' лв.');

            // Обновяваме текста за периода
            const startDate = new Date(data.startDate);
            const endDate = new Date(data.endDate);
            const today = new Date().toDateString();
            const endOfMonth = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0).toDateString();

            let periodText = 'Дневно разполагаеми';
            let isCustomPeriod = false;

            if (startDate.toDateString() === today && endDate.toDateString() === endOfMonth) {
                periodText = 'Дневно до края на месеца';
            } else {
                periodText = 'Дневно за периода';
                isCustomPeriod = true;
            }

            $('#daily-period-text').text(periodText);
            $('#remaining-days-text').text(`(${data.remainingDays} дни)`);

            // Показваме/скриваме допълнителната информация
            updateCalculationInfo(data, isSelectedMode, isCustomPeriod);
        }

        // Нова функция за обновяване на информацията за изчислението
        function updateCalculationInfo(data, isSelectedMode, isCustomPeriod) {
            const $calculationInfo = $('#calculation-info');
            const $accountsInfo = $('#selected-accounts-count');
            const $periodInfo = $('#period-dates');

            let shouldShowInfo = false;

            // Информация за сметките
            if (isSelectedMode && data.includedAccounts) {
                const selectedCount = data.selectedAccountIds.length;
                const totalCount = data.includedAccounts.length;
                $accountsInfo.text(`${selectedCount}/${totalCount} сметки`);
                shouldShowInfo = true;
            } else {
                $accountsInfo.text('Всички сметки');
            }

            // Информация за периода
            if (isCustomPeriod) {
                const startDate = formatDate(data.startDate);
                const endDate = formatDate(data.endDate);
                $periodInfo.text(`${startDate} - ${endDate}`);
                shouldShowInfo = true;
            } else {
                $periodInfo.text('Стандартен период');
            }

            // Показваме информацията само ако има нещо специфично
            if (shouldShowInfo) {
                $calculationInfo.show();
            } else {
                $calculationInfo.hide();
            }
        }

        function showAlert(type, message) {
            const alertHtml = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;

            // Добавяме alert-а в началото на modal body
            $('.modal-body').prepend(alertHtml);

            // Автоматично премахване след 5 секунди
            setTimeout(() => {
                $('.alert').fadeOut();
            }, 5000);
        }
    </script>

    <style>
        .card {
            transition: all 0.3s ease;
        }

            .card:hover {
                transform: translateY(-2px);
            }

        .btn-outline-success:hover i,
        .btn-outline-danger:hover i,
        .btn-outline-info:hover i,
        .btn-outline-primary:hover i,
        .btn-outline-warning:hover i,
        .btn-outline-secondary:hover i {
            transform: scale(1.1);
            transition: transform 0.2s ease;
        }

        .modal-lg {
            max-width: 900px;
        }

        .modal-xl {
            max-width: 1200px;
        }

        #budget-details .card {
            border-width: 2px;
        }

        .border-3 {
            border-width: 3px !important;
        }

        .planned-transactions-widget {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        }

        /* Стилове за панела за избор на сметки */
        #accountSelectionPanel .card {
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
        }

        #accountSelectionPanel .form-check {
            margin-bottom: 0.5rem;
        }

        #accountSelectionPanel .form-check-label {
            cursor: pointer;
            width: 100%;
        }

        #accountSelectionPanel .badge {
            min-width: 80px;
            text-align: center;
        }

        /* Стилове за информацията за включените сметки */
        #included-accounts-info .card {
            background-color: #f0f8ff;
            border-color: #17a2b8;
        }

        #included-accounts-list .badge {
            min-width: 80px;
            text-align: center;
        }

        /* Стилове за информацията в картата */
        #calculation-info {
            border-top: 1px solid rgba(255, 193, 7, 0.3);
            padding-top: 0.5rem;
            margin-top: 0.5rem !important;
        }

            #calculation-info small {
                font-size: 0.75rem;
                line-height: 1.2;
            }

            #calculation-info .text-info {
                color: #17a2b8 !important;
            }

            #calculation-info .text-muted {
                color: #6c757d !important;
            }

        /* Плавен преход при показване/скриване на информацията */
        #calculation-info {
            transition: all 0.3s ease;
            opacity: 1;
        }

            #calculation-info.hide {
                opacity: 0;
                height: 0;
                padding: 0;
                margin: 0;
                border: none;
            }

            /* Стилове за иконките в информацията */
            #calculation-info i {
                font-size: 0.7rem;
                opacity: 0.8;
            }

        /* Анимация за loading */
        .spinner-border {
            width: 3rem;
            height: 3rem;
        }

        /* Стилове за режимите на изчисление */
        .form-check {
            margin-bottom: 0.5rem;
        }

        .form-check-input:checked + .form-check-label {
            font-weight: 500;
            color: #0d6efd;
        }

        /* Hover ефекти за чекбоксовете на сметките */
        .account-checkbox:hover + .form-check-label {
            background-color: #e9ecef;
            border-radius: 0.25rem;
            padding: 0.25rem;
            margin: -0.25rem;
        }

        /* Responsive стилове */
        @@media (max-width: 768px) {
            .modal-xl

        {
            max-width: 95%;
            margin: 1rem auto;
        }

        #accountCheckboxes .col-md-6 {
            flex: 0 0 100%;
            max-width: 100%;
        }

        }
    </style>
}